# docker-compose.yml
version: '3.8'

services:
  # Service 1: The PostgreSQL Database
  db:
    image: postgres:15-alpine  # Use an official PostgreSQL image
    container_name: user-db
    environment:
      POSTGRES_DB: user_db        # Creates the 'user_db' database on startup
      POSTGRES_USER: admin        # Creates the 'admin' user
      POSTGRES_PASSWORD: password # Sets the password for the 'admin' user
    ports:
      - "5432:5432"               # Maps the container's port 5432 to your machine's port 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persists database data

  # Service 2: The Spring Boot Backend
  backend:
    build: .                      # Build the image from the Dockerfile in the current directory
    container_name: distributor-backend
    ports:
      - "8081:8081"               # Maps the container's port 8081 to your machine's port 8081
    depends_on:
      - db                        # Tells the backend to wait until the database is ready
    environment:
      # This overrides the database URL in application.properties to connect to the Docker container
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/user_db
      # You can also override other properties here if needed
      # - SPRING_DATASOURCE_USERNAME=admin
      # - SPRING_DATASOURCE_PASSWORD=password

volumes:
  postgres-data: # Defines the volume for data persistence
