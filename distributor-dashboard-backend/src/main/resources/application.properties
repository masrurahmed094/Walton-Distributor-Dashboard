server.port=8081

# =============================================================
# Primary Database (user_db) Configuration
# =============================================================
# This URL uses the Docker network name 'db', which is correct when running with docker-compose
spring.datasource.url=jdbc:postgresql://db:5432/user_db
spring.datasource.username=admin
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# This line tells Spring Boot to always run the data.sql script
spring.sql.init.mode=always

# This new line fixes timing issues by waiting for tables to be created before running data.sql
spring.jpa.defer-datasource-initialization=true

# =============================================================
# Secondary (Read-Only) Database (genfmcg_db) Configuration
# =============================================================
# This URL points to your existing, external database.
# MODIFIED: Added socketTimeout=10 to the URL to prevent endless spinners on slow queries.
genfmcg.datasource.url=jdbc:postgresql://192.168.118.173:5432/genfmcg_db?socketTimeout=10
genfmcg.datasource.username=walton_supp1
genfmcg.datasource.password=$Wal098@45
genfmcg.jpa.hibernate.ddl-auto=none
genfmcg.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- FAIL-FAST HIKARI CP CONFIGURATION ---
# This ensures a fast failure if the database cannot be reached at all.
genfmcg.datasource.hikari.connection-timeout=10000
genfmcg.datasource.hikari.maximum-pool-size=5

# =============================================================
# Spring Security & JWT Configuration
# =============================================================
jwt.secret=YourSuperSecretKeyForJWTsWhichShouldBeLongAndComplexAndAtLeast256BitsLongForHS256
jwt.expiration.ms=86400000

