services:
  # Service 1: The PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: user-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust # <--- Add this line
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d user_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service 2: The Spring Boot Backend
  backend:
    build: ./distributor-dashboard-backend
    container_name: distributor-backend
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/user_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - GENFMCG_DATASOURCE_URL=jdbc:postgresql://192.168.118.173:5432/genfmcg_db?stringtype=unspecified
      - GENFMCG_DATASOURCE_USERNAME=walton_supp1
      - GENFMCG_DATASOURCE_PASSWORD=$$Wal098@45
      - JWT_SECRET=YourSuperSecretKeyForJWTsWhichShouldBeLongAndComplexAndAtLeast256BitsLongForHS256

  # Service 3: The Angular Frontend
  frontend:
    build: ./distributor-dashboard-frontend
    container_name: distributor-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8081

volumes:
  postgres-data: